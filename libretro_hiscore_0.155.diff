diff --git a/src/emu/emu.mak b/src/emu/emu.mak
index d7d8bcd..c9157fc 100644
--- a/src/emu/emu.mak
+++ b/src/emu/emu.mak
@@ -46,7 +46,6 @@ OBJDIRS += \
 
 #-------------------------------------------------
 # emulator core objects
-# MKCHAMP - ADDED hiscore.o TO LIST TO COMPILE THE HISCORE PIECE
 #-------------------------------------------------
 
 EMUOBJS = \
@@ -88,7 +87,6 @@ EMUOBJS = \
 	$(EMUOBJ)/emupal.o \
 	$(EMUOBJ)/fileio.o \
 	$(EMUOBJ)/hash.o \
-	$(EMUOBJ)/hiscore.o \
 	$(EMUOBJ)/image.o \
 	$(EMUOBJ)/info.o \
 	$(EMUOBJ)/input.o \
diff --git a/src/emu/emuopts.c b/src/emu/emuopts.c
index 9bc4756..401eefb 100644
--- a/src/emu/emuopts.c
+++ b/src/emu/emuopts.c
@@ -52,10 +52,6 @@ const options_entry emu_options::s_option_entries[] =
 	{ OPTION_SNAPSHOT_DIRECTORY,                         "snap",      OPTION_STRING,     "directory to save screenshots" },
 	{ OPTION_DIFF_DIRECTORY,                             "diff",      OPTION_STRING,     "directory to save hard drive image difference files" },
 	{ OPTION_COMMENT_DIRECTORY,                          "comments",  OPTION_STRING,     "directory to save debugger comments" },
-	
-	// MKCHAMP - ADDING CFG OPTION TO SPECIFY HISCORE DIRECTORY..."hi" BY DEFAULT
-	{ NULL,                                              NULL,        OPTION_HEADER,     "CORE OUTPUT DIRECTORY OPTIONS" },
-	{ OPTION_HISCORE_DIRECTORY,                          "hi",        OPTION_STRING,     "directory to save hiscores" },
 
 	// state/playback options
 	{ NULL,                                              NULL,        OPTION_HEADER,     "CORE STATE/PLAYBACK OPTIONS" },
@@ -174,11 +170,6 @@ const options_entry emu_options::s_option_entries[] =
 	{ OPTION_HTTP_PORT,                                  "8080",      OPTION_STRING,     "http server listener port" },
 	{ OPTION_HTTP_PATH,                                  "web",       OPTION_STRING,     "path to web files" },
 	{ OPTION_CONSOLE,                                    "0",         OPTION_BOOLEAN,    "enable emulator LUA console" },
-	// MKChamp Hiscore Diff options
-	{ NULL,                                              NULL,        OPTION_HEADER,     "CORE MKChamp OPTIONS" },
-	{ OPTION_DISABLE_HISCORE_PATCH,                      "0",         OPTION_BOOLEAN,    "disable hiscore saving" },
-	//{ OPTION_DISABLE_NAGSCREEN_PATCH,                    "0",         OPTION_BOOLEAN,    "disable suppression of nagscreens" },
-	//{ OPTION_DISABLE_LOADING_PATCH,                      "0",         OPTION_BOOLEAN,    "disable suppression of loading screens /white box" },
 	{ NULL }
 };
 
diff --git a/src/emu/emuopts.h b/src/emu/emuopts.h
index da98740..7184694 100644
--- a/src/emu/emuopts.h
+++ b/src/emu/emuopts.h
@@ -66,8 +66,6 @@ enum
 #define OPTION_SNAPSHOT_DIRECTORY   "snapshot_directory"
 #define OPTION_DIFF_DIRECTORY       "diff_directory"
 #define OPTION_COMMENT_DIRECTORY    "comment_directory"
-//MKCHAMP - DECLARING THE DIRECTORY OPTION FOR HIGH SCORES TO BE SAVED TO
-#define OPTION_HISCORE_DIRECTORY	  "hiscore_directory"
 
 // core state/playback options
 #define OPTION_STATE                "state"
@@ -174,11 +172,6 @@ enum
 #define OPTION_AUTOBOOT_DELAY       "autoboot_delay"
 #define OPTION_AUTOBOOT_SCRIPT      "autoboot_script"
 
-/* MKChamp Hiscore Diff Options */
-#define OPTION_DISABLE_HISCORE_PATCH		"disable_hiscore_patch"
-//#define OPTION_DISABLE_NAGSCREEN_PATCH		"disable_nagscreen_patch"
-//#define OPTION_DISABLE_LOADING_PATCH		"disable_loading_patch"
-
 #define OPTION_HTTP                 "http"
 #define OPTION_HTTP_PORT            "http_port"
 #define OPTION_HTTP_PATH            "http_path"
@@ -234,9 +227,6 @@ public:
 	const char *snapshot_directory() const { return value(OPTION_SNAPSHOT_DIRECTORY); }
 	const char *diff_directory() const { return value(OPTION_DIFF_DIRECTORY); }
 	const char *comment_directory() const { return value(OPTION_COMMENT_DIRECTORY); }
-	
-	// MKCHAMP - hiscore directory options
-	const char *hiscore_directory() const { return value(OPTION_HISCORE_DIRECTORY); }
 
 	// core state/playback options
 	const char *state() const { return value(OPTION_STATE); }
@@ -333,11 +323,6 @@ public:
 	bool skip_gameinfo() const { return bool_value(OPTION_SKIP_GAMEINFO); }
 	const char *ui_font() const { return value(OPTION_UI_FONT); }
 	const char *ram_size() const { return value(OPTION_RAMSIZE); }
-	
-	// MKChamp Hiscore Diff options 
-	bool disable_hiscore_patch() const { return bool_value(OPTION_DISABLE_HISCORE_PATCH); }
-	//bool disable_nagscreen_patch() const { return bool_value(OPTION_DISABLE_NAGSCREEN_PATCH); }
-	//bool disable_loading_patch() const { return bool_value(OPTION_DISABLE_LOADING_PATCH); }
 
 	bool confirm_quit() const { return bool_value(OPTION_CONFIRM_QUIT); }
 	bool ui_mouse() const { return bool_value(OPTION_UI_MOUSE); }
diff --git a/src/emu/machine.c b/src/emu/machine.c
index 9f489ee..9120cb9 100644
--- a/src/emu/machine.c
+++ b/src/emu/machine.c
@@ -75,8 +75,6 @@
 #include "debugger.h"
 #include "render.h"
 #include "cheat.h"
-//MKCHAMP - ADDING HEADER FILE HISCORE FOR INCLUSION
-#include "hiscore.h"
 #include "ui/selgame.h"
 #include "uiinput.h"
 #include "crsshair.h"
@@ -112,8 +110,6 @@ static char giant_string_buffer[65536] = { 0 };
 //  running_machine - constructor
 //-------------------------------------------------
 
-int cpunum;
-
 running_machine::running_machine(const machine_config &_config, machine_manager &manager)
 	: firstcpu(NULL),
 		primary_screen(NULL),
@@ -159,11 +155,6 @@ running_machine::running_machine(const machine_config &_config, machine_manager
 		}
 	screen_device_iterator screeniter(root_device());
 	primary_screen = screeniter.first();
-	
-	//MKCHAMP--initialize the cpu for hiscore
- 	cpu[0] = firstcpu;
- 	for (cpunum = 1; cpunum < ARRAY_LENGTH(cpu) && cpu[cpunum - 1] != NULL; cpunum++)
- 		cpu[cpunum] = cpu[cpunum - 1]->next();
 
 	// fetch core options
 	if (options().debug())
@@ -352,10 +343,6 @@ int running_machine::run(bool firstrun)
 
 		// load the configuration settings and NVRAM
 		bool settingsloaded = config_load_settings(*this);
-		
-  	//MKCHAMP - INITIALIZING THE HISCORE ENGINE
-  	if (! options().disable_hiscore_patch())
- 		hiscore_init(*this);
 
 		// disallow save state registrations starting here.
 		// Don't do it earlier, config load can create network
diff --git a/src/emu/machine.h b/src/emu/machine.h
index 258116b..052eada 100644
--- a/src/emu/machine.h
+++ b/src/emu/machine.h
@@ -232,7 +232,6 @@ public:
 
 	// CPU information
 	cpu_device *            firstcpu;           // first CPU
-	device_t *		        cpu[8];             // MKChamp--CPU for hiscore support 
 
 private:
 	// video-related information
diff --git a/src/emu/mame.c b/src/emu/mame.c
index 236b13d..661948b 100644
--- a/src/emu/mame.c
+++ b/src/emu/mame.c
@@ -78,8 +78,6 @@
 #include "debugger.h"
 #include "render.h"
 #include "cheat.h"
-//MKCHAMP - ADDING HEADER FILE HISCORE FOR INCLUSION
-#include "hiscore.h"
 #include "ui/ui.h"
 #include "uiinput.h"
 #include "crsshair.h"
diff --git a/src/emu/profiler.c b/src/emu/profiler.c
index e11a3c3..6dd07a2 100644
--- a/src/emu/profiler.c
+++ b/src/emu/profiler.c
@@ -156,8 +156,6 @@ void real_profiler_state::update_text(running_machine &machine)
 		{ PROFILER_BLIT,             "OSD Blitting" },
 		{ PROFILER_SOUND,            "Sound Generation" },
 		{ PROFILER_TIMER_CALLBACK,   "Timer Callbacks" },
-		//MKCHAMP - INCLUDING THE HISCORE ENGINE TO THE PROFILER
-		{ PROFILER_HISCORE,          "Hiscore" },
 		{ PROFILER_INPUT,            "Input Processing" },
 		{ PROFILER_MOVIE_REC,        "Movie Recording" },
 		{ PROFILER_LOGERROR,         "Error Logging" },
diff --git a/src/emu/profiler.h b/src/emu/profiler.h
index dbea3b6..7554b0c 100644
--- a/src/emu/profiler.h
+++ b/src/emu/profiler.h
@@ -51,8 +51,6 @@ enum profile_type
 	PROFILER_BLIT,
 	PROFILER_SOUND,
 	PROFILER_TIMER_CALLBACK,
-	//MKCHAMP - INCLUDING THE HISCORE ENGINE TO THE PROFILER
-	PROFILER_HISCORE,
 	PROFILER_INPUT,             // input.c and inptport.c
 	PROFILER_MOVIE_REC,         // movie recording
 	PROFILER_LOGERROR,          // logerror
diff --git a/src/osd/retro/retromain.c b/src/osd/retro/retromain.c
index 469bbe3..0946404 100755
--- a/src/osd/retro/retromain.c
+++ b/src/osd/retro/retromain.c
@@ -114,16 +114,16 @@ static const char* xargv_cmd[64];
 int PARAMCOUNT=0;
 
 // path configuration
-#define NB_OPTPATH 12
+#define NB_OPTPATH 11//12
 
 static const char *dir_name[NB_OPTPATH]={
-	"cfg","nvram","hi"/*,"memcard"*/,"input",
+	"cfg","nvram"/*,"memcard"*/,"input",
 	"states" ,"snaps","diff","samples",
 	"artwork","cheat","ini","hash"
 };
 
 static const char *opt_name[NB_OPTPATH]={
-	"-cfg_directory","-nvram_directory","-hiscore_directory",/*"-memcard_directory",*/"-input_directory",
+	"-cfg_directory","-nvram_directory",/*"-memcard_directory",*/"-input_directory",
 	"-state_directory" ,"-snapshot_directory","-diff_directory","-samplepath",
 	"-artpath","-cheatpath","-inipath","-hashpath"
 };
